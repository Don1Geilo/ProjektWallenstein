name: Wallenstein Pipeline

on:
  workflow_dispatch:
  schedule:
    - cron: "0 7-15 * * 1-5"  # stündlich 08:00–16:00 CET (UTC-Umrechnung beachten)
    - cron: "0 6-14 * * 1-5"  # stündlich 08:00–16:00 CEST (Sommerzeit)

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PYTHONUNBUFFERED: "1"
  TZ: "Europe/Berlin"
  WALLENSTEIN_DB_PATH: data/wallenstein.duckdb
  WALLENSTEIN_YF_SLEEP: "0.6"  # Backoff for yfinance rate limits

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: read
      actions: read
      id-token: write
    concurrency:
      group: wallenstein-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            **/requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare folders
        run: |
          mkdir -p data stockOverview

      - name: Export env from secrets
        run: echo "Env ready"
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}

      - name: Run Wallenstein with retries
        id: run_wallenstein
        shell: bash
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        run: |
          set -e
          echo "Start Wallenstein..."
          n=0
          until [ $n -ge 3 ]
          do
            python main.py && break
            n=$((n+1))
            echo "Run failed ($n). Sleeping and retrying..."
            sleep $((30*n))
          done

      - name: Upload CSV artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: stockOverview-${{ github.run_id }}
          path: |
            stockOverview/*.csv
          if-no-files-found: warn
          retention-days: 7

      - name: Persist DuckDB optional
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: duckdb-${{ github.run_id }}
          path: data/*.duckdb
          if-no-files-found: warn
          retention-days: 3
