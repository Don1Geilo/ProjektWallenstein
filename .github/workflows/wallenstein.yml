name: Wallenstein

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6-14 * * 1-5'
    - cron: '30 14-21 * * 1-5'

concurrency:
  group: wallenstein-${{ github.ref }}
  cancel-in-progress: true    

jobs:
  run:
    concurrency:
      group: wallenstein-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
      REDDIT_CLIENT_ID:     ${{ secrets.REDDIT_CLIENT_ID }}
      REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
      REDDIT_USER_AGENT:    ${{ secrets.REDDIT_USER_AGENT }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Prepare folders
        run: mkdir -p data stockOverview
      - name: Neutralize local .env on CI
        run: |
          if [ -f .env ]; then rm .env; fi
      - name: Run pipeline
        run: python main.py
      - name: Notify Telegram on failure
        if: ${{ failure() && secrets.TELEGRAM_BOT_TOKEN != '' && secrets.TELEGRAM_CHAT_ID != '' }}
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python - <<'PY'
import os, requests
tok=os.environ.get("TELEGRAM_BOT_TOKEN","")
cid=os.environ.get("TELEGRAM_CHAT_ID","")
if tok and cid:
    requests.get(f"https://api.telegram.org/bot{tok}/sendMessage",
        params={"chat_id":cid,"text":"Wallenstein CI failed ðŸš¨"})
PY
